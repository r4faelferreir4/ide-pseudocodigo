Tipos Enumerados em javascript:

O compilador utiliza tipos enumerados em pascal, por exemplo :
47:   object2 = (konstant, variable, type1, prozedure, funktion);
48:   types = (notyp, ints, reals, bools, chars, arrays, records);

Javascript não possui um tipo enumerado nativo.
Durante a execução, o programa faz a busca utilizando a função "ord"
da posição no enumerado do valor adicionado.
Para resolver isso, vamos utilizar uma variável que não será alterado seu valor.

var object2 = ["konstant", "variable", "type1", "prozedure", "funktion"];
var object1 = ["konstant", "variable", "type1", "prozedure", "funktion"];
var types = ["notyp", "ints", "reals", "bools", "chars", "arrays", "records"];
var types1 = ["notyp", "ints", "reals", "bools", "chars", "arrays", "records"];

Quando houver no código a utilização da função ord, para encontrar a posição no enumerado do valor da variável
utilizaremos a função indexOf() para isso.

object1.indexOf(object2)

A variável object2, armazena durante a execução strings, que depois serão utilizadas para a comparação.


///////////////////////////////////////////////////////
Utilização de goto em javascript.

O código em pascal utiliza labels e goto para pular entre as linhas de código, javascript não oferece
nativamente esta funcionalidade, existem algumas implementações para poder se utilizar goto, mas não será possível pois:
Em pascal, as labels são declaradas no começo da função, logo elas podem ser chamadas antes mesmo do trecho de código específico, as implementações de labels em javascript só permitem
chamar uma label depois de seu trecho de código.
Utilizaremos funções para alternar entre os trechos de código

goto 1 = linhas 464 e 476 são chamadas quando foi encontrado um trecho de comentário de código(464)
e quando foi encontrado um caracter novamente(476), os dois apontam para o inicio da função insymbol(), então podemos alterar goto 1 para insymbol.

goto 2 = linha 428 ele utiliza um goto 2 em forma de loop para ler os caracteres de uma string até mudar de linha. Utilizamos um laço do..while para fazer esse loop

goto 3 = linha 419 é chamado quando encontra uma string com "" vazia, pula para a label 3 que trata sobre caracteres e emite um erro, como esse goto está na label 2, que estamos tratando como um do..while, e a label 3 é imediatamente seguinte, então utilizamos um break.


///////////////////////////////////////////////////
Passagem de parâmetro por referência.
Javascript não possui ponteiros, o código em pascal utiliza registros e arranjos, que basicamente são ponteiros
para estruturas, como as funções do compilador recebem geralmente apenas um ponteiro, utilizaremos return para receber os valores alterados.
